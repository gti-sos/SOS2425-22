{
	"info": {
		"_postman_id": "8f63bd2e-0555-4bd1-80f9-60bb6e45723c",
		"name": "L06",
		"description": "This API handles the data of the various ministry of justice in Zaragoza.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "42360434"
	},
	"item": [
		{
			"name": "POST - carga de dato",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"province\":\"Sevilla\",\r\n\"creation_year\":2025,\r\n\"id\":2025,\r\n\"portalId\":2025,\r\n\"postal_code\":41020,\r\n\"latitude\":41.66893233,\r\n\"length\":-0.8967708469,\r\n\"title\":\"SOS2425-22\",\r\n\"equipment_type\":\"prueba\",\r\n\"public_titularity\":\"TRUE\",\r\n\"street_address\":\"Avda. Reina Mercedes\",\r\n\"geometry\":\"675089.0192155159 4615156.222776663\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}",
					"host": [
						"{{base_url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET - dato espec√≠fico",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"// Check if the response body is an object\r",
							"pm.test(\"Response body is an object\", function () {\r",
							"    pm.expect(pm.response.json()).to.be.an('object');\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/2025",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"2025"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET - cargar filtro (creation_year)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"// Check if the response is an array\r",
							"pm.test(\"Response is an array\", function () {\r",
							"    pm.expect(pm.response.json()).to.be.an('array');\r",
							"});\r",
							"\r",
							"// Check if the array contains at least 1 object\r",
							"pm.test(\"Array contains at least 1 object\", function () {\r",
							"    pm.expect(pm.response.json()).to.have.lengthOf.at.least(1);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}?creation_year=2025",
					"host": [
						"{{base_url}}"
					],
					"query": [
						{
							"key": "creation_year",
							"value": "2025"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GET - cargar filtro (id)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"// Check if the response is an array\r",
							"pm.test(\"Response is an array\", function () {\r",
							"    pm.expect(pm.response.json()).to.be.an('array');\r",
							"});\r",
							"\r",
							"// Check if the array contains at least 1 object\r",
							"pm.test(\"Array contains at least 1 object\", function () {\r",
							"    pm.expect(pm.response.json()).to.have.lengthOf.at.least(1);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}?id=2025",
					"host": [
						"{{base_url}}"
					],
					"query": [
						{
							"key": "id",
							"value": "2025"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GET - cargar filtro (portalId)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"// Check if the response is an array\r",
							"pm.test(\"Response is an array\", function () {\r",
							"    pm.expect(pm.response.json()).to.be.an('array');\r",
							"});\r",
							"\r",
							"// Check if the array contains at least 1 object\r",
							"pm.test(\"Array contains at least 1 object\", function () {\r",
							"    pm.expect(pm.response.json()).to.have.lengthOf.at.least(1);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}?portalId=2025",
					"host": [
						"{{base_url}}"
					],
					"query": [
						{
							"key": "portalId",
							"value": "2025"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GET - cargar filtro (postal_code)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"// Check if the response is an array\r",
							"pm.test(\"Response is an array\", function () {\r",
							"    pm.expect(pm.response.json()).to.be.an('array');\r",
							"});\r",
							"\r",
							"// Check if the array contains at least 1 object\r",
							"pm.test(\"Array contains at least 1 object\", function () {\r",
							"    pm.expect(pm.response.json()).to.have.lengthOf.at.least(1);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}?postal_code=41020",
					"host": [
						"{{base_url}}"
					],
					"query": [
						{
							"key": "postal_code",
							"value": "41020"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GET - cargar filtro con rango",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"// Check if the response is an array\r",
							"pm.test(\"Response is an array\", function () {\r",
							"    pm.expect(pm.response.json()).to.be.an('array');\r",
							"});\r",
							"\r",
							"// Check if the array contains at least 1 object\r",
							"pm.test(\"Array contains at least 1 object\", function () {\r",
							"    pm.expect(pm.response.json()).to.have.lengthOf.at.least(1);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}?from=2000&to=9050",
					"host": [
						"{{base_url}}"
					],
					"query": [
						{
							"key": "from",
							"value": "2000"
						},
						{
							"key": "to",
							"value": "9050"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "POST - error conflicto (409)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 409\", function () {\r",
							"    pm.response.to.have.status(409);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"province\":\"Sevilla\",\r\n\"creation_year\":2025,\r\n\"id\":2025,\r\n\"portalId\":2025,\r\n\"postal_code\":41020,\r\n\"latitude\":41.66893233,\r\n\"length\":-0.8967708469,\r\n\"title\":\"SOS2425-22\",\r\n\"equipment_type\":\"prueba\",\r\n\"public_titularity\":\"TRUE\",\r\n\"street_address\":\"Avda. Reina Mercedes\",\r\n\"geometry\":\"675089.0192155159 4615156.222776663\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}",
					"host": [
						"{{base_url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST - error falta de campos (400)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"province\":\"Sevilla\",\r\n\"creation_year\":2025,\r\n\"id\":2025,\r\n\"portalId\":2025,\r\n\"postal_code\":41020,\r\n\"latitude\":41.66893233,\r\n\"length\":-0.8967708469,\r\n\"title\":\"SOS2425-22\",\r\n\"equipment_type\":\"prueba\",\r\n\"public_titularity\":\"TRUE\",\r\n\"street_address\":\"Avda. Reina Mercedes\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}",
					"host": [
						"{{base_url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT - actualizar dato especifico",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"province\":\"Sevilla\",\r\n\"creation_year\":2025,\r\n\"id\":2025,\r\n\"portalId\":2026,\r\n\"postal_code\":41020,\r\n\"latitude\":41.66893233,\r\n\"length\":-0.8967708469,\r\n\"title\":\"SOS2425-22\",\r\n\"equipment_type\":\"prueba\",\r\n\"public_titularity\":\"TRUE\",\r\n\"street_address\":\"Avda. Reina Mercedes\",\r\n\"geometry\":\"675089.0192155159 4615156.222776663\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/2025",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"2025"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE - borrado de un dato especifico",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{base_url}}/2025",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"2025"
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT - error actualizar todos los archivos (405)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 405\", function () {\r",
							"    pm.response.to.have.status(405);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{base_url}}",
					"host": [
						"{{base_url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST - error carga dato especifico (405)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 405\", function () {\r",
							"    pm.response.to.have.status(405);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{base_url}}/9032",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"9032"
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT - error distinto identificador (400)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"province\": \"Zaragoza\",\r\n    \"creation_year\": 2012,\r\n    \"id\": 9032,\r\n    \"portalId\": 42182,\r\n    \"postal_code\": 50018,\r\n    \"latitude\": 41.66893233,\r\n    \"length\": -0.8967708469,\r\n    \"title\": \"Juzgados de lo Penal\",\r\n    \"equipment_type\": \"justicia,otros-organismos\",\r\n    \"public_titularity\": \"TRUE\",\r\n    \"street_address\": \"Avda. Jos√© Atar√©s, 89-97\",\r\n    \"geometry\": \"675089.0192155159 4615156.222776663\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/9020",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"9020"
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT - fallo recurso no existe (404)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"province\": \"Zaragoza\",\r\n    \"creation_year\": 2012,\r\n    \"id\": 41020,\r\n    \"portalId\": 42182,\r\n    \"postal_code\": 50018,\r\n    \"latitude\": 41.66893233,\r\n    \"length\": -0.8967708469,\r\n    \"title\": \"Juzgados de lo Penal\",\r\n    \"equipment_type\": \"justicia,otros-organismos\",\r\n    \"public_titularity\": \"TRUE\",\r\n    \"street_address\": \"Avda. Jos√© Atar√©s, 89-97\",\r\n    \"geometry\": \"675089.0192155159 4615156.222776663\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/41020",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"41020"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:16078/api/v1/ministry-of-justice-in-zaragoza",
			"type": "default"
		}
	]
}